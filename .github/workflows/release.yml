name: Release Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - main 
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        platform:
          - { os: linux, arch: amd64 }
          - { os: linux, arch: arm64 }
          - { os: windows, arch: amd64 }
          - { os: windows, arch: arm64 }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build Frontend
        working-directory: web
        run: |
          echo "Installing dependencies..."
          pnpm install
          echo "Building frontend..."
          pnpm run build
          echo "Frontend build completed"

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build Backend
        env:
          GOOS: ${{ matrix.platform.os }}
          GOARCH: ${{ matrix.platform.arch }}
        run: |
          echo "Building for ${{ matrix.platform.os }}-${{ matrix.platform.arch }}"
          mkdir -p bin
          if [ "${{ matrix.platform.os }}" = "windows" ]; then
            go build -v -o bin/harbor-api-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.exe ./main.go
          else
            go build -v -o bin/harbor-api-${{ matrix.platform.os }}-${{ matrix.platform.arch }} ./main.go
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: bin/harbor-api-*
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}